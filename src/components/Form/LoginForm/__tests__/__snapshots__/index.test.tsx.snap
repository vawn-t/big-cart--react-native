// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginForm renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      sheetAllowedDetents="large"
      sheetCornerRadius={-1}
      sheetExpandsWhenScrolledToEdge={true}
      sheetGrabberVisible={false}
      sheetLargestUndimmedDetent="all"
      stackPresentation="push"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          collapsable={false}
          style={
            [
              {
                "flex": 1,
              },
              {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              {
                "rowGap": 20,
              }
            }
          >
            <View
              style={
                {
                  "rowGap": 5,
                }
              }
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "backgroundColor": "#FFFFFF",
                      "borderColor": "#FFFFFF",
                      "borderRadius": 5,
                      "borderWidth": 1,
                      "flexDirection": "row",
                    },
                    undefined,
                    null,
                  ]
                }
                testID="Input"
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "paddingHorizontal": 28,
                    }
                  }
                >
                  <RNSVGSvgView
                    bbHeight="19"
                    bbWidth="23"
                    fill="none"
                    focusable={false}
                    height={19}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "flex": 0,
                          "height": 19,
                          "width": 23,
                        },
                      ]
                    }
                    width={23}
                  >
                    <RNSVGGroup
                      fill={null}
                      propList={
                        [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M20.979.523H2.02A2.025 2.025 0 0 0 0 2.545V16.02c0 1.111.904 2.022 2.021 2.022h18.957c1.111 0 2.022-.904 2.022-2.021V2.544c0-1.11-.904-2.022-2.021-2.022Zm-.28 1.348-9.156 9.157L2.307 1.87H20.7ZM1.348 15.742V2.818l6.49 6.434-6.49 6.49Zm.953.953 6.494-6.494 2.275 2.256c.264.261.69.26.951-.002l2.22-2.219 6.458 6.46H2.301Zm19.351-.953-6.459-6.459 6.46-6.459v12.918Z"
                        fill={
                          {
                            "payload": 4287006857,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <TextInput
                  autoComplete="email"
                  keyboardType="email-address"
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  placeholder="Email Address"
                  secureTextEntry={false}
                  style={
                    [
                      {
                        "flex": 10,
                        "paddingVertical": 20,
                      },
                      undefined,
                    ]
                  }
                  testID="Input-TextInput"
                />
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "flex": 1,
                      "opacity": 1,
                      "paddingHorizontal": 28,
                    }
                  }
                />
              </View>
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "backgroundColor": "#FFFFFF",
                      "borderColor": "#FFFFFF",
                      "borderRadius": 5,
                      "borderWidth": 1,
                      "flexDirection": "row",
                    },
                    undefined,
                    null,
                  ]
                }
                testID="Input"
              >
                <View
                  style={
                    {
                      "flex": 1,
                      "paddingHorizontal": 28,
                    }
                  }
                >
                  <RNSVGSvgView
                    bbHeight="23"
                    bbWidth="18"
                    fill="none"
                    focusable={false}
                    height={23}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "flex": 0,
                          "height": 23,
                          "width": 18,
                        },
                      ]
                    }
                    width={18}
                  >
                    <RNSVGGroup
                      fill={null}
                      propList={
                        [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M15.094 23H2.156A2.159 2.159 0 0 1 0 20.844V10.78c0-1.19.968-2.156 2.156-2.156h12.938c1.188 0 2.156.967 2.156 2.156v10.063c0 1.19-.968 2.156-2.156 2.156ZM2.156 10.062a.72.72 0 0 0-.719.72v10.062a.72.72 0 0 0 .72.718h12.937a.72.72 0 0 0 .719-.718V10.78a.72.72 0 0 0-.72-.719H2.157Z"
                        fill={
                          {
                            "payload": 4287006857,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGPath
                        d="M13.656 10.063a.719.719 0 0 1-.719-.72V5.75a4.318 4.318 0 0 0-4.312-4.313A4.318 4.318 0 0 0 4.312 5.75v3.594a.719.719 0 0 1-1.437 0V5.75A5.756 5.756 0 0 1 8.625 0a5.756 5.756 0 0 1 5.75 5.75v3.594a.719.719 0 0 1-.719.719Z"
                        fill={
                          {
                            "payload": 4287006857,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
                <TextInput
                  autoComplete="password"
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  placeholder="● ● ● ● ● ●"
                  secureTextEntry={true}
                  style={
                    [
                      {
                        "flex": 10,
                        "paddingVertical": 20,
                      },
                      undefined,
                    ]
                  }
                  testID="Input-TextInput"
                />
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "flex": 1,
                      "opacity": 1,
                      "paddingHorizontal": 28,
                    }
                  }
                >
                  <RNSVGSvgView
                    bbHeight="17"
                    bbWidth="27"
                    fill="none"
                    focusable={false}
                    height={17}
                    style={
                      [
                        {
                          "backgroundColor": "transparent",
                          "borderWidth": 0,
                        },
                        {
                          "flex": 0,
                          "height": 17,
                          "width": 27,
                        },
                      ]
                    }
                    width={27}
                  >
                    <RNSVGGroup
                      fill={null}
                      propList={
                        [
                          "fill",
                        ]
                      }
                    >
                      <RNSVGPath
                        d="M26.314 7.924C26.078 7.601 20.441 0 13.241 0S.404 7.6.168 7.924a.874.874 0 0 0 0 1.03c.236.324 5.874 7.925 13.073 7.925 7.2 0 12.837-7.6 13.073-7.924a.873.873 0 0 0 0-1.03Zm-13.073 7.209c-5.303 0-9.896-5.045-11.256-6.694 1.358-1.65 5.942-6.693 11.256-6.693 5.303 0 9.896 5.044 11.256 6.694-1.358 1.65-5.941 6.693-11.256 6.693Z"
                        fill={
                          {
                            "payload": 4287006857,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                      />
                      <RNSVGPath
                        d="M13.241 3.879a4.566 4.566 0 0 0-4.56 4.56A4.566 4.566 0 0 0 13.24 13a4.566 4.566 0 0 0 4.56-4.56 4.566 4.566 0 0 0-4.56-4.56Zm0 7.6a3.044 3.044 0 0 1-3.04-3.04 3.044 3.044 0 0 1 3.04-3.04 3.044 3.044 0 0 1 3.04 3.04 3.044 3.044 0 0 1-3.04 3.04Z"
                        fill={
                          {
                            "payload": 4287006857,
                            "type": 0,
                          }
                        }
                        propList={
                          [
                            "fill",
                          ]
                        }
                      />
                    </RNSVGGroup>
                  </RNSVGSvgView>
                </View>
              </View>
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "columnGap": 10,
                    "flexDirection": "row",
                  }
                }
              >
                <RCTSwitch
                  accessibilityRole="switch"
                  onChange={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "height": 31,
                      "width": 51,
                    }
                  }
                  value={false}
                />
                <Text
                  style={
                    [
                      {
                        "color": "#868889",
                      },
                      {
                        "fontFamily": "Poppins-Medium",
                      },
                      {
                        "fontSize": 15,
                      },
                      undefined,
                    ]
                  }
                >
                  Remember me
                </Text>
              </View>
              <Text
                onPress={[Function]}
                style={
                  [
                    {
                      "color": "#868889",
                    },
                    {
                      "fontFamily": "Poppins-Medium",
                    },
                    {
                      "fontSize": 15,
                    },
                    {
                      "color": "#407EC7",
                    },
                  ]
                }
              >
                Forgot Password
              </Text>
            </View>
            <View
              accessibilityState={
                {
                  "disabled": true,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                [
                  {
                    "alignItems": "center",
                    "backgroundColor": "#6CC51D",
                    "borderRadius": 5,
                    "flexDirection": "row",
                  },
                  {
                    "opacity": 0.5,
                  },
                  undefined,
                ]
              }
              testID="login-submit"
            >
              <View
                style={
                  {
                    "flexGrow": 1,
                    "paddingVertical": 20,
                  }
                }
              >
                <Text
                  style={
                    [
                      {
                        "color": "#000000",
                      },
                      {
                        "fontFamily": "Poppins-SemiBold",
                      },
                      {
                        "fontSize": 15,
                      },
                      {
                        "color": "#FFFFFF",
                        "textAlign": "center",
                      },
                    ]
                  }
                >
                  Login
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleVisible={true}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="test"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
