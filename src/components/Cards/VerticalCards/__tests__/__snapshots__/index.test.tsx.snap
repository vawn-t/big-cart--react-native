// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HorizontalCards component renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      collapsable={false}
      gestureResponseDistance={
        {
          "bottom": -1,
          "end": -1,
          "start": -1,
          "top": -1,
        }
      }
      nativeBackButtonDismissalEnabled={false}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onHeaderBackButtonClicked={[Function]}
      onNativeDismissCancelled={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      sheetAllowedDetents="large"
      sheetCornerRadius={-1}
      sheetExpandsWhenScrolledToEdge={true}
      sheetGrabberVisible={false}
      sheetLargestUndimmedDetent="all"
      stackPresentation="push"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
      swipeDirection="horizontal"
    >
      <View
        accessibilityElementsHidden={false}
        importantForAccessibility="auto"
        style={
          {
            "flex": 1,
            "flexDirection": "column-reverse",
          }
        }
      >
        <View
          collapsable={false}
          style={
            [
              {
                "flex": 1,
              },
              {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <RCTScrollView
            contentContainerStyle={
              {
                "backgroundColor": "#F4F5F9",
                "paddingTop": 20,
                "rowGap": 15,
              }
            }
            data={
              [
                1,
                2,
                3,
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View>
              <View
                onFocusCapture={[Function]}
                onLayout={[Function]}
                style={null}
              >
                <View
                  style={
                    {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    handlerTag={1}
                    handlerType="PanGestureHandler"
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onLayout={[Function]}
                    style={
                      {
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        {
                          "bottom": 0,
                          "flexDirection": "row-reverse",
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": [
                            {
                              "translateX": -10000,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "alignItems": "center",
                            "backgroundColor": "#EF574B",
                            "justifyContent": "center",
                            "marginLeft": 5,
                            "opacity": 1,
                            "width": 75,
                          }
                        }
                      >
                        <RNSVGSvgView
                          bbHeight="28"
                          bbWidth="23"
                          fill="none"
                          focusable={false}
                          height={28}
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              {
                                "flex": 0,
                                "height": 28,
                                "width": 23,
                              },
                            ]
                          }
                          width={23}
                        >
                          <RNSVGGroup
                            fill={null}
                            propList={
                              [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M20.563 3.5H15.75v-.875A2.628 2.628 0 0 0 13.125 0h-3.5A2.628 2.628 0 0 0 7 2.625V3.5H2.187A2.19 2.19 0 0 0 0 5.688V8.75c0 .483.392.875.875.875h.478L2.11 25.5A2.622 2.622 0 0 0 4.731 28H18.02a2.622 2.622 0 0 0 2.622-2.5l.756-15.875h.478a.875.875 0 0 0 .875-.875V5.687A2.19 2.19 0 0 0 20.562 3.5ZM8.75 2.625c0-.482.393-.875.875-.875h3.5c.482 0 .875.393.875.875V3.5H8.75v-.875Zm-7 3.063c0-.242.196-.438.438-.438h18.375c.24 0 .437.196.437.438v2.187H1.75V5.687Zm17.143 19.729a.874.874 0 0 1-.874.833H4.73a.874.874 0 0 1-.874-.833L3.105 9.625h16.54l-.752 15.792Z"
                              fill={
                                {
                                  "payload": 4294967295,
                                  "type": 0,
                                }
                              }
                              propList={
                                [
                                  "fill",
                                ]
                              }
                            />
                            <RNSVGPath
                              d="M11.375 24.5a.875.875 0 0 0 .875-.875V12.25a.875.875 0 0 0-1.75 0v11.375c0 .483.392.875.875.875ZM15.75 24.5a.875.875 0 0 0 .875-.875V12.25a.875.875 0 0 0-1.75 0v11.375c0 .483.392.875.875.875ZM7 24.5a.875.875 0 0 0 .875-.875V12.25a.875.875 0 0 0-1.75 0v11.375c0 .483.392.875.875.875Z"
                              fill={
                                {
                                  "payload": 4294967295,
                                  "type": 0,
                                }
                              }
                              propList={
                                [
                                  "fill",
                                ]
                              }
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                      <View
                        onLayout={[Function]}
                      />
                    </View>
                    <View
                      collapsable={false}
                      handlerTag={2}
                      handlerType="TapGestureHandler"
                      onGestureHandlerEvent={[Function]}
                      onGestureHandlerStateChange={[Function]}
                      pointerEvents="auto"
                      style={
                        {
                          "transform": [
                            {
                              "translateX": -0,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flex": 1,
                            "justifyContent": "center",
                          }
                        }
                      >
                        <ActivityIndicator
                          color="#AEDC81"
                          size="small"
                          testID="loading-indicator"
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onFocusCapture={[Function]}
                onLayout={[Function]}
                style={null}
              >
                <View
                  style={
                    {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    handlerTag={3}
                    handlerType="PanGestureHandler"
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onLayout={[Function]}
                    style={
                      {
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        {
                          "bottom": 0,
                          "flexDirection": "row-reverse",
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": [
                            {
                              "translateX": -10000,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "alignItems": "center",
                            "backgroundColor": "#EF574B",
                            "justifyContent": "center",
                            "marginLeft": 5,
                            "opacity": 1,
                            "width": 75,
                          }
                        }
                      >
                        <RNSVGSvgView
                          bbHeight="28"
                          bbWidth="23"
                          fill="none"
                          focusable={false}
                          height={28}
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              {
                                "flex": 0,
                                "height": 28,
                                "width": 23,
                              },
                            ]
                          }
                          width={23}
                        >
                          <RNSVGGroup
                            fill={null}
                            propList={
                              [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M20.563 3.5H15.75v-.875A2.628 2.628 0 0 0 13.125 0h-3.5A2.628 2.628 0 0 0 7 2.625V3.5H2.187A2.19 2.19 0 0 0 0 5.688V8.75c0 .483.392.875.875.875h.478L2.11 25.5A2.622 2.622 0 0 0 4.731 28H18.02a2.622 2.622 0 0 0 2.622-2.5l.756-15.875h.478a.875.875 0 0 0 .875-.875V5.687A2.19 2.19 0 0 0 20.562 3.5ZM8.75 2.625c0-.482.393-.875.875-.875h3.5c.482 0 .875.393.875.875V3.5H8.75v-.875Zm-7 3.063c0-.242.196-.438.438-.438h18.375c.24 0 .437.196.437.438v2.187H1.75V5.687Zm17.143 19.729a.874.874 0 0 1-.874.833H4.73a.874.874 0 0 1-.874-.833L3.105 9.625h16.54l-.752 15.792Z"
                              fill={
                                {
                                  "payload": 4294967295,
                                  "type": 0,
                                }
                              }
                              propList={
                                [
                                  "fill",
                                ]
                              }
                            />
                            <RNSVGPath
                              d="M11.375 24.5a.875.875 0 0 0 .875-.875V12.25a.875.875 0 0 0-1.75 0v11.375c0 .483.392.875.875.875ZM15.75 24.5a.875.875 0 0 0 .875-.875V12.25a.875.875 0 0 0-1.75 0v11.375c0 .483.392.875.875.875ZM7 24.5a.875.875 0 0 0 .875-.875V12.25a.875.875 0 0 0-1.75 0v11.375c0 .483.392.875.875.875Z"
                              fill={
                                {
                                  "payload": 4294967295,
                                  "type": 0,
                                }
                              }
                              propList={
                                [
                                  "fill",
                                ]
                              }
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                      <View
                        onLayout={[Function]}
                      />
                    </View>
                    <View
                      collapsable={false}
                      handlerTag={4}
                      handlerType="TapGestureHandler"
                      onGestureHandlerEvent={[Function]}
                      onGestureHandlerStateChange={[Function]}
                      pointerEvents="auto"
                      style={
                        {
                          "transform": [
                            {
                              "translateX": -0,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flex": 1,
                            "justifyContent": "center",
                          }
                        }
                      >
                        <ActivityIndicator
                          color="#AEDC81"
                          size="small"
                          testID="loading-indicator"
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
              <View
                onFocusCapture={[Function]}
                onLayout={[Function]}
                style={null}
              >
                <View
                  style={
                    {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    handlerTag={5}
                    handlerType="PanGestureHandler"
                    onGestureHandlerEvent={[Function]}
                    onGestureHandlerStateChange={[Function]}
                    onLayout={[Function]}
                    style={
                      {
                        "overflow": "hidden",
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      style={
                        {
                          "bottom": 0,
                          "flexDirection": "row-reverse",
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": [
                            {
                              "translateX": -10000,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        accessibilityState={
                          {
                            "busy": undefined,
                            "checked": undefined,
                            "disabled": undefined,
                            "expanded": undefined,
                            "selected": undefined,
                          }
                        }
                        accessibilityValue={
                          {
                            "max": undefined,
                            "min": undefined,
                            "now": undefined,
                            "text": undefined,
                          }
                        }
                        accessible={true}
                        collapsable={false}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          {
                            "alignItems": "center",
                            "backgroundColor": "#EF574B",
                            "justifyContent": "center",
                            "marginLeft": 5,
                            "opacity": 1,
                            "width": 75,
                          }
                        }
                      >
                        <RNSVGSvgView
                          bbHeight="28"
                          bbWidth="23"
                          fill="none"
                          focusable={false}
                          height={28}
                          style={
                            [
                              {
                                "backgroundColor": "transparent",
                                "borderWidth": 0,
                              },
                              {
                                "flex": 0,
                                "height": 28,
                                "width": 23,
                              },
                            ]
                          }
                          width={23}
                        >
                          <RNSVGGroup
                            fill={null}
                            propList={
                              [
                                "fill",
                              ]
                            }
                          >
                            <RNSVGPath
                              d="M20.563 3.5H15.75v-.875A2.628 2.628 0 0 0 13.125 0h-3.5A2.628 2.628 0 0 0 7 2.625V3.5H2.187A2.19 2.19 0 0 0 0 5.688V8.75c0 .483.392.875.875.875h.478L2.11 25.5A2.622 2.622 0 0 0 4.731 28H18.02a2.622 2.622 0 0 0 2.622-2.5l.756-15.875h.478a.875.875 0 0 0 .875-.875V5.687A2.19 2.19 0 0 0 20.562 3.5ZM8.75 2.625c0-.482.393-.875.875-.875h3.5c.482 0 .875.393.875.875V3.5H8.75v-.875Zm-7 3.063c0-.242.196-.438.438-.438h18.375c.24 0 .437.196.437.438v2.187H1.75V5.687Zm17.143 19.729a.874.874 0 0 1-.874.833H4.73a.874.874 0 0 1-.874-.833L3.105 9.625h16.54l-.752 15.792Z"
                              fill={
                                {
                                  "payload": 4294967295,
                                  "type": 0,
                                }
                              }
                              propList={
                                [
                                  "fill",
                                ]
                              }
                            />
                            <RNSVGPath
                              d="M11.375 24.5a.875.875 0 0 0 .875-.875V12.25a.875.875 0 0 0-1.75 0v11.375c0 .483.392.875.875.875ZM15.75 24.5a.875.875 0 0 0 .875-.875V12.25a.875.875 0 0 0-1.75 0v11.375c0 .483.392.875.875.875ZM7 24.5a.875.875 0 0 0 .875-.875V12.25a.875.875 0 0 0-1.75 0v11.375c0 .483.392.875.875.875Z"
                              fill={
                                {
                                  "payload": 4294967295,
                                  "type": 0,
                                }
                              }
                              propList={
                                [
                                  "fill",
                                ]
                              }
                            />
                          </RNSVGGroup>
                        </RNSVGSvgView>
                      </View>
                      <View
                        onLayout={[Function]}
                      />
                    </View>
                    <View
                      collapsable={false}
                      handlerTag={6}
                      handlerType="TapGestureHandler"
                      onGestureHandlerEvent={[Function]}
                      onGestureHandlerStateChange={[Function]}
                      pointerEvents="auto"
                      style={
                        {
                          "transform": [
                            {
                              "translateX": -0,
                            },
                          ],
                        }
                      }
                    >
                      <View
                        style={
                          {
                            "alignItems": "center",
                            "flex": 1,
                            "justifyContent": "center",
                          }
                        }
                      >
                        <ActivityIndicator
                          color="#AEDC81"
                          size="small"
                          testID="loading-indicator"
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backTitleVisible={true}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="test"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      />
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
